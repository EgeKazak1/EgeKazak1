-- Full enhanced demo admin menu (client-only)
-- Put this LocalScript into StarterPlayerScripts

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- SETTINGS
local BTN_SIZE = UDim2.new(0,48,0,48)
local MENU_WIDTH = 380
local MENU_HEIGHT = 420
local TWEEN_TIME = 0.22
local TITLE_FONT = Enum.Font.GothamBold

local function notify(title, text, duration)
	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = title or "Menu";
			Text = text or "";
			Duration = duration or 3;
		})
	end)
end

-- Clear any old GUI
for _,g in pairs(playerGui:GetChildren()) do
	if g.Name == "DemoAdminMenuGUI" then g:Destroy() end
end

-- SCREEN GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "DemoAdminMenuGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

-- TOP BUTTON (draggable)
local topBtn = Instance.new("Frame")
topBtn.Name = "TopButton"
topBtn.Size = BTN_SIZE
topBtn.Position = UDim2.new(0,16,0,16)
topBtn.AnchorPoint = Vector2.new(0,0)
topBtn.BackgroundColor3 = Color3.fromRGB(28,28,28)
topBtn.BorderSizePixel = 0
topBtn.Parent = screenGui
topBtn.ZIndex = 50
Instance.new("UICorner", topBtn).CornerRadius = UDim.new(0,10)

local icon = Instance.new("TextLabel", topBtn)
icon.Size = UDim2.fromScale(1,1)
icon.BackgroundTransparency = 1
icon.Text = "≡"
icon.Font = TITLE_FONT
icon.TextSize = 24
icon.TextColor3 = Color3.fromRGB(255,214,102)
icon.RichText = false

-- MAIN MENU FRAME
local menu = Instance.new("Frame")
menu.Name = "Menu"
menu.Size = UDim2.new(0, MENU_WIDTH, 0, MENU_HEIGHT)
menu.Position = UDim2.new(0,16,0,80)
menu.AnchorPoint = Vector2.new(0,0)
menu.BackgroundColor3 = Color3.fromRGB(16,16,16)
menu.BorderSizePixel = 0
menu.Visible = false
menu.Parent = screenGui
menu.ZIndex = 49
Instance.new("UICorner", menu).CornerRadius = UDim.new(0,12)

-- HEADER
local header = Instance.new("Frame", menu)
header.Size = UDim2.new(1,0,0,44)
header.Position = UDim2.new(0,0,0,0)
header.BackgroundTransparency = 1

local title = Instance.new("TextLabel", header)
title.Size = UDim2.new(0.6,0,1,0)
title.Position = UDim2.new(0,12,0,0)
title.BackgroundTransparency = 1
title.Font = TITLE_FONT
title.TextSize = 20
title.Text = "Ultimate Demo Menu"
title.TextColor3 = Color3.fromRGB(230,230,230)
title.TextXAlignment = Enum.TextXAlignment.Left

local btnClose = Instance.new("TextButton", header)
btnClose.Size = UDim2.new(0,36,0,28)
btnClose.Position = UDim2.new(1,-44,0,8)
btnClose.BackgroundColor3 = Color3.fromRGB(55,55,55)
btnClose.Text = "X"
btnClose.Font = TITLE_FONT
btnClose.TextSize = 18
btnClose.TextColor3 = Color3.fromRGB(255,255,255)
Instance.new("UICorner", btnClose).CornerRadius = UDim.new(0,6)

local btnInc = Instance.new("TextButton", header)
btnInc.Size = UDim2.new(0,28,0,28)
btnInc.Position = UDim2.new(1,-92,0,8)
btnInc.BackgroundColor3 = Color3.fromRGB(50,50,50)
btnInc.Text = "+"
btnInc.Font = TITLE_FONT
btnInc.TextSize = 18
Instance.new("UICorner", btnInc).CornerRadius = UDim.new(0,6)

local btnDec = Instance.new("TextButton", header)
btnDec.Size = UDim2.new(0,28,0,28)
btnDec.Position = UDim2.new(1,-62,0,8)
btnDec.BackgroundColor3 = Color3.fromRGB(50,50,50)
btnDec.Text = "−"
btnDec.Font = TITLE_FONT
btnDec.TextSize = 18
Instance.new("UICorner", btnDec).CornerRadius = UDim.new(0,6)

-- CONTENT (scrolling)
local content = Instance.new("ScrollingFrame", menu)
content.Size = UDim2.new(1,-24,1,-78)
content.Position = UDim2.new(0,12,0,52)
content.CanvasSize = UDim2.new(0,0,0,0)
content.ScrollBarThickness = 8
content.BackgroundTransparency = 1
content.VerticalScrollBarPosition = Enum.VerticalScrollBarPosition.Right

local uiList = Instance.new("UIListLayout", content)
uiList.SortOrder = Enum.SortOrder.LayoutOrder
uiList.Padding = UDim.new(0,8)

-- Selected target label
local selectedLabel = Instance.new("TextLabel", menu)
selectedLabel.Size = UDim2.new(1,-24,0,24)
selectedLabel.Position = UDim2.new(0,12,1,-44)
selectedLabel.BackgroundTransparency = 1
selectedLabel.Font = Enum.Font.SourceSans
selectedLabel.TextSize = 14
selectedLabel.Text = "Hedef: Yok"
selectedLabel.TextColor3 = Color3.fromRGB(200,200,200)
selectedLabel.TextXAlignment = Enum.TextXAlignment.Left

-- helper: make button
local function makeButton(text, parent, callback)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1,0,0,40)
	btn.BackgroundColor3 = Color3.fromRGB(36,36,36)
	btn.BorderSizePixel = 0
	btn.Font = TITLE_FONT
	btn.TextSize = 15
	btn.Text = text
	btn.TextColor3 = Color3.fromRGB(240,240,240)
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0,8)
	btn.Parent = parent
	btn.MouseButton1Click:Connect(function()
		pcall(callback)
	end)
	return btn
end

-- PLAYERS LIST UI
local playersLabel = Instance.new("TextLabel", content)
playersLabel.Size = UDim2.new(1,0,0,18)
playersLabel.BackgroundTransparency = 1
playersLabel.Font = Enum.Font.SourceSansSemibold
playersLabel.TextSize = 14
playersLabel.Text = "Oyuncular (tıklayarak hedefle):"
playersLabel.TextColor3 = Color3.fromRGB(190,190,190)
playersLabel.TextXAlignment = Enum.TextXAlignment.Left

local playersList = Instance.new("Frame", content)
playersList.Size = UDim2.new(1,0,0,120)
playersList.BackgroundTransparency = 1

local plScroll = Instance.new("ScrollingFrame", playersList)
plScroll.Size = UDim2.new(1,0,1,0)
plScroll.CanvasSize = UDim2.new(0,0,0,0)
plScroll.ScrollBarThickness = 6
local plLayout = Instance.new("UIListLayout", plScroll)
plLayout.SortOrder = Enum.SortOrder.LayoutOrder
plLayout.Padding = UDim.new(0,6)

local selectedTarget = nil

local function refreshPlayers()
	for _,v in pairs(plScroll:GetChildren()) do
		if v:IsA("TextButton") then v:Destroy() end
	end
	for i,p in pairs(Players:GetPlayers()) do
		if p ~= player then
			local b = Instance.new("TextButton")
			b.Size = UDim2.new(1,0,0,26)
			b.BackgroundColor3 = Color3.fromRGB(60,60,60)
			b.BorderSizePixel = 0
			b.Font = Enum.Font.SourceSans
			b.TextSize = 14
			b.Text = p.Name
			b.TextColor3 = Color3.fromRGB(230,230,230)
			b.Parent = plScroll
			b.MouseButton1Click:Connect(function()
				selectedTarget = p
				selectedLabel.Text = "Hedef: " .. p.Name
				notify("Hedef seçildi", p.Name, 2)
			end)
		end
	end
	-- adjust canvas size
	local total = 0
	for _,obj in pairs(plScroll:GetChildren()) do
		if obj:IsA("TextButton") then total = total + obj.Size.Y.Offset + plLayout.Padding.Offset end
	end
	plScroll.CanvasSize = UDim2.new(0,0,0, math.max(total, 120))
end

Players.PlayerAdded:Connect(refreshPlayers)
Players.PlayerRemoving:Connect(function()
	refreshPlayers()
	if selectedTarget and not selectedTarget.Parent then selectedTarget = nil selectedLabel.Text = "Hedef: Yok" end
end)
refreshPlayers()

-- ACTION BUTTONS (rich set)
makeButton("Mock: Unlock ALL Gamepasses (demo)", content, function()
	-- DEMO only: does NOT purchase or change server ownership
	notify("Demo", "Tüm gamepass'ler yerel olarak açıldı (demo). Gerçekte satın alma yapılmadı.", 4)
end)

makeButton("Kill (self)", content, function()
	local char = player.Character
	if char then
		local hum = char:FindFirstChildWhichIsA("Humanoid")
		if hum then
			hum.Health = 0
			notify("İşlem", "Kendini öldürdün (yerel).", 2)
		end
	end
end)

makeButton("Speed Boost (x2) - self", content, function()
	local char = player.Character
	if char then
		local hum = char:FindFirstChildWhichIsA("Humanoid")
		if hum then
			hum.WalkSpeed = (hum.WalkSpeed or 16) * 2
			notify("Speed", "Yürüyüş hızı iki katına çıktı.", 2)
		end
	end
end)

makeButton("Jump Boost (+20) - self", content, function()
	local char = player.Character
	if char then
		local hum = char:FindFirstChildWhichIsA("Humanoid")
		if hum then
			hum.JumpPower = (hum.JumpPower or 50) + 20
			notify("Jump", "Zıplama gücü artırıldı.", 2)
		end
	end
end)

makeButton("Reset Walk/Jump (self)", content, function()
	local char = player.Character
	if char then
		local hum = char:FindFirstChildWhichIsA("Humanoid")
		if hum then
			hum.WalkSpeed = 16
			hum.JumpPower = 50
			notify("Reset", "Hız ve zıplama sıfırlandı.", 2)
		end
	end
end)

makeButton("Goto (teleport YOU to target)", content, function()
	if not selectedTarget or not selectedTarget.Character then
		notify("Hata", "Önce hedef seçmelisin.", 3); return
	end
	local targetHRP = selectedTarget.Character:FindFirstChild("HumanoidRootPart")
	local myChar = player.Character
	local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
	if targetHRP and myHRP then
		myHRP.CFrame = targetHRP.CFrame * CFrame.new(2,0,2)
		notify("Teleport", "Hedefin yanına ışınlandın.", 2)
	end
end)

makeButton("Bring (client marker near target)", content, function()
	if not selectedTarget or not selectedTarget.Character then
		notify("Hata", "Önce hedef seçmelisin.", 3); return
	end
	local hrp = selectedTarget.Character:FindFirstChild("HumanoidRootPart")
	if hrp then
		-- attach a tether visual (Beam-like) - using part markers
		local anchor = Instance.new("Part")
		anchor.Name = "DemoBringAnchor_"..selectedTarget.Name
		anchor.Size = Vector3.new(1,1,1)
		anchor.Anchored = true
		anchor.CanCollide = false
		anchor.Transparency = 0.5
		anchor.Material = Enum.Material.Neon
		anchor.Color = Color3.fromRGB(100,200,255)
		anchor.CFrame = hrp.CFrame * CFrame.new(0,2,0)
		anchor.Parent = workspace
		-- destroy after 4s
		delay(4, function() if anchor and anchor.Parent then anchor:Destroy() end end)
		notify("Bring (demo)", selectedTarget.Name .. " için işaret bırakıldı (client-side).", 3)
	end
end)

makeButton("Highlight Target (billboard)", content, function()
	if not selectedTarget or not selectedTarget.Character then
		notify("Hata", "Önce hedef seçmelisin.", 3); return
	end
	local head = selectedTarget.Character:FindFirstChild("Head")
	if head then
		local bg = Instance.new("BillboardGui")
		bg.Size = UDim2.new(0,160,0,50)
		bg.StudsOffset = Vector3.new(0,2.5,0)
		bg.AlwaysOnTop = true
		bg.Parent = head
		local label = Instance.new("TextLabel", bg)
		label.Size = UDim2.fromScale(1,1)
		label.BackgroundTransparency = 0.35
		label.Text = "TARGET: " .. selectedTarget.Name
		label.Font = TITLE_FONT
		label.TextSize = 16
		label.TextColor3 = Color3.fromRGB(255,255,255)
		label.BackgroundColor3 = Color3.fromRGB(40,40,40)
		delay(4, function() if bg and bg.Parent then bg:Destroy() end end)
		notify("Vurgulandı", selectedTarget.Name, 2)
	end
end)

makeButton("Local Explosion Visual (harmless)", content, function()
	if not selectedTarget or not selectedTarget.Character then
		notify("Hata", "Önce hedef seçmelisin.", 3); return
	end
	local hrp = selectedTarget.Character:FindFirstChild("HumanoidRootPart")
	if hrp then
		local p = Instance.new("Part")
		p.Size = Vector3.new(1,1,1)
		p.Anchored = true
		p.CanCollide = false
		p.Transparency = 1
		p.CFrame = hrp.CFrame
		p.Parent = workspace
		local ps = Instance.new("ParticleEmitter", p)
		ps.Size = NumberSequence.new{NumberSequenceKeypoint.new(0,1), NumberSequenceKeypoint.new(1,5)}
		ps.Rate = 200
		ps.Lifetime = NumberRange.new(0.4)
		ps.Speed = NumberRange.new(40)
		ps.Enabled = true
		delay(0.6, function() ps.Enabled = false end)
		delay(2, function() if p and p.Parent then p:Destroy() end end)
		notify("Efekt", "Local explosion görseli oynatıldı.", 2)
	end
end)

makeButton("Spawn Local Vehicle (visual)", content, function()
	-- spawns a decorative "car" part near player (client-only)
	local myChar = player.Character
	local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
	if myHRP then
		local v = Instance.new("Model")
		v.Name = "LocalVehicle"
		local body = Instance.new("Part")
		body.Size = Vector3.new(4,1.2,6)
		body.Anchored = true
		body.CanCollide = false
		body.Material = Enum.Material.SmoothPlastic
		body.Color = Color3.fromRGB(80,80,200)
		body.CFrame = myHRP.CFrame * CFrame.new(0,0,-8)
		body.Parent = v
		v.Parent = workspace
		delay(12, function() if v and v.Parent then v:Destroy() end end)
		notify("Araç", "Local araç oluşturuldu (görsel).", 3)
	end
end)

makeButton("Refresh player list", content, function()
	refreshPlayers()
	notify("Tamam", "Oyuncu listesi yenilendi.", 2)
end)

-- OPEN/CLOSE
local isOpen = false
local function openMenu()
	if isOpen then return end
	menu.Visible = true
	menu.Size = UDim2.new(0, MENU_WIDTH, 0, 0)
	TweenService:Create(menu, TweenInfo.new(TWEEN_TIME), {Size = UDim2.new(0, MENU_WIDTH, 0, MENU_HEIGHT)}):Play()
	isOpen = true
end
local function closeMenu()
	if not isOpen then return end
	TweenService:Create(menu, TweenInfo.new(TWEEN_TIME), {Size = UDim2.new(0, MENU_WIDTH, 0, 0)}):Play()
	delay(TWEEN_TIME, function() menu.Visible = false end)
	isOpen = false
end

-- top button click toggles menu
local debounce = false
topBtn.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		if debounce then return end
		debounce = true
		if isOpen then closeMenu() else openMenu() end
		wait(0.18)
		debounce = false
	end
end)
btnClose.MouseButton1Click:Connect(function() closeMenu() end)

-- resize handlers
btnInc.MouseButton1Click:Connect(function()
	local newW = math.min(MENU_WIDTH + 80, 900)
	local newH = math.min(MENU_HEIGHT + 80, 900)
	MENU_WIDTH = newW MENU_HEIGHT = newH
	menu.Size = UDim2.new(0, MENU_WIDTH, 0, MENU_HEIGHT)
end)
btnDec.MouseButton1Click:Connect(function()
	local newW = math.max(MENU_WIDTH - 80, 240)
	local newH = math.max(MENU_HEIGHT - 80, 160)
	MENU_WIDTH = newW MENU_HEIGHT = newH
	menu.Size = UDim2.new(0, MENU_WIDTH, 0, MENU_HEIGHT)
end)

-- DRAGGING TOP BUTTON
local dragging = false
local dragInput, dragStart, startPos
local function updateDrag(input)
	local delta = input.Position - dragStart
	topBtn.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

topBtn.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = topBtn.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

topBtn.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		updateDrag(input)
	end
end)

-- small attention animation
spawn(function()
	TweenService:Create(topBtn, TweenInfo.new(0.6, Enum.EasingStyle.Sine, Enum.EasingDirection.Out, -1, true), {Size = UDim2.new(0,52,0,52)}):Play()
	wait(1.2)
	TweenService:Create(topBtn, TweenInfo.new(0.1), {Size = BTN_SIZE}):Play()
end)

-- adjust content canvas size when UIListLayout resizes
uiList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	content.CanvasSize = UDim2.new(0,0,0, uiList.AbsoluteContentSize.Y + 12)
end)

-- final notification
notify("Demo Menü Yüklendi", "Güncellenmiş menü yüklendi — tüm işlemler client-side demo niteliğindedir.", 4)
