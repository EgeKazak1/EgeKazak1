-- Local MOCK Gamepass System (CLIENT ONLY)
-- Put this LocalScript into StarterPlayerScripts
-- Features:
--  - Mock "unlock" gamepasses locally with UI toggles
--  - Applies local effects: Speed, Jump, VIP teleport-with-return, local vehicle spawn, visual effects
--  - Timers & "rental" durations (e.g. 30m mock permission)
--  - Everything is client-only (does NOT buy or change real gamepasses)

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- ======= Config =======
local TITLE_FONT = Enum.Font.GothamBold
local MENU_W, MENU_H = 420, 480
local TWEEN = 0.18

-- Mock gamepass definitions (ids are just labels for UX)
local MockPasses = {
	{ id = "GP_PREMIUM_SPEED",   name = "Premium Speed",        desc = "Yürüyüş hızını yükseltir (lokal)", durationDefault = 0 },
	{ id = "GP_VIP_JUMP",        name = "VIP Jump",             desc = "Zıplama gücünü yükseltir (lokal)", durationDefault = 0 },
	{ id = "GP_VOLDES_TEMP",     name = "Voldex 30min (demo)",  desc = "30dk süreyle VIP zone'a ışınlar (lokal)", durationDefault = 1800 },
	{ id = "GP_COLOR_PACK",      name = "Colorizer Pack",       desc = "Karakterine lokal renk efektleri uygular", durationDefault = 0 },
	{ id = "GP_CAR_PACK",        name = "Vehicle Pack (local)", desc = "Client-side araç spawn eder (görsel)", durationDefault = 600 },
}

-- store local state
local OwnedLocal = {}            -- id -> boolean
local ActiveTimers = {}         -- id -> {endTime = os.time()+n}
local OriginalStats = {}        -- store player's original WalkSpeed/JumpPower/CFrame
local SavedPosition = nil       -- for teleport-back
local LocalVehicleModel = nil

-- Helper: send notification
local function notify(title, text, duration)
	pcall(function()
		StarterGui:SetCore("SendNotification", {
			Title = title or "Info";
			Text = text or "";
			Duration = duration or 4;
		})
	end)
end

-- Ensure previous GUI cleared
for _,g in pairs(playerGui:GetChildren()) do
	if g.Name == "MockGP_GUI" then g:Destroy() end
end

-- ========== Build GUI ==========
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "MockGP_GUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- top toggle button
local topBtn = Instance.new("TextButton")
topBtn.Name = "TopBtn"
topBtn.Size = UDim2.new(0,60,0,60)
topBtn.Position = UDim2.new(0,16,0,16)
topBtn.AnchorPoint = Vector2.new(0,0)
topBtn.BackgroundColor3 = Color3.fromRGB(34,34,34)
topBtn.Text = "GP"
topBtn.Font = TITLE_FONT
topBtn.TextSize = 22
topBtn.TextColor3 = Color3.fromRGB(255,215,110)
topBtn.Parent = screenGui
Instance.new("UICorner", topBtn).CornerRadius = UDim.new(0,12)
topBtn.ZIndex = 100

local menu = Instance.new("Frame")
menu.Name = "Menu"
menu.Size = UDim2.new(0, MENU_W, 0, MENU_H)
menu.Position = UDim2.new(0,16,0,90)
menu.BackgroundColor3 = Color3.fromRGB(16,16,16)
menu.BorderSizePixel = 0
menu.Parent = screenGui
menu.Visible = false
Instance.new("UICorner", menu).CornerRadius = UDim.new(0,12)
menu.ZIndex = 99

local header = Instance.new("Frame", menu)
header.Size = UDim2.new(1,0,0,48)
header.BackgroundTransparency = 1
local title = Instance.new("TextLabel", header)
title.Size = UDim2.new(0.6,0,1,0)
title.Position = UDim2.new(0,12,0,0)
title.BackgroundTransparency = 1
title.Font = TITLE_FONT
title.TextSize = 20
title.Text = "Mock Gamepass Hub (Local)"
title.TextColor3 = Color3.fromRGB(230,230,230)
title.TextXAlignment = Enum.TextXAlignment.Left
local closeBtn = Instance.new("TextButton", header)
closeBtn.Size = UDim2.new(0,36,0,30)
closeBtn.Position = UDim2.new(1,-46,0,9)
closeBtn.BackgroundColor3 = Color3.fromRGB(200,60,60)
closeBtn.Text = "X"
closeBtn.Font = TITLE_FONT
closeBtn.TextSize = 16
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0,6)

local content = Instance.new("ScrollingFrame", menu)
content.Size = UDim2.new(1,-24,1,-80)
content.Position = UDim2.new(0,12,0,56)
content.BackgroundTransparency = 1
content.ScrollBarThickness = 8
local layout = Instance.new("UIListLayout", content)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0,8)

local footer = Instance.new("Frame", menu)
footer.Size = UDim2.new(1,0,0,28)
footer.Position = UDim2.new(0,0,1,-28)
footer.BackgroundTransparency = 1

local statusLabel = Instance.new("TextLabel", footer)
statusLabel.Size = UDim2.new(1,-24,1,0)
statusLabel.Position = UDim2.new(0,12,0,0)
statusLabel.BackgroundTransparency = 1
statusLabel.Font = Enum.Font.SourceSans
statusLabel.TextSize = 14
statusLabel.TextColor3 = Color3.fromRGB(200,200,200)
statusLabel.Text = "Durum: Hazır (Yerel demo)."

-- helper: round time
local function secondsToClock(sec)
	if sec <= 0 then return "00:00" end
	local m = math.floor(sec/60)
	local s = sec % 60
	return string.format("%02d:%02d", m, s)
end

-- ======= Core effects functions (client-only) =======
local function ensureOriginals()
	local char = player.Character
	if not char then return end
	local hum = char:FindFirstChildWhichIsA("Humanoid")
	if not hum then return end
	if not OriginalStats.WalkSpeed then OriginalStats.WalkSpeed = hum.WalkSpeed end
	if not OriginalStats.JumpPower then OriginalStats.JumpPower = hum.JumpPower or (hum.Jump and hum.Jump) end
	if not OriginalStats.CFrame and char:FindFirstChild("HumanoidRootPart") then
		OriginalStats.CFrame = char.HumanoidRootPart.CFrame
	end
end

local function applySpeed(mult)
	local char = player.Character
	if not char then return end
	local hum = char:FindFirstChildWhichIsA("Humanoid")
	if not hum then return end
	ensureOriginals()
	local base = OriginalStats.WalkSpeed or 16
	if mult and mult > 0 then
		hum.WalkSpeed = base * mult
	else
		hum.WalkSpeed = base
	end
end

local function applyJump(add)
	local char = player.Character
	if not char then return end
	local hum = char:FindFirstChildWhichIsA("Humanoid")
	if not hum then return end
	ensureOriginals()
	local base = OriginalStats.JumpPower or 50
	if add and add ~= 0 then
		-- If JumpPower exists:
		if hum.JumpPower then
			hum.JumpPower = base + add
		else
			-- fallback if JumpPower not present, try Humanoid.JumpHeight?
			pcall(function() hum.JumpPower = base + add end)
		end
	else
		if hum.JumpPower then
			hum.JumpPower = base
		end
	end
end

local function spawnLocalVehicle()
	-- Spawn a simple decorative vehicle near player's HRP (client-only)
	if LocalVehicleModel and LocalVehicleModel.Parent then
		LocalVehicleModel:Destroy()
		LocalVehicleModel = nil
	end
	local char = player.Character
	if not char or not char:FindFirstChild("HumanoidRootPart") then return end
	local hrp = char.HumanoidRootPart
	local m = Instance.new("Model")
	m.Name = "LOCAL_CAR_"..player.Name
	local body = Instance.new("Part")
	body.Size = Vector3.new(4,1.2,6)
	body.Anchored = true
	body.CanCollide = false
	body.Material = Enum.Material.SmoothPlastic
	body.Color = Color3.fromRGB(80,160,220)
	body.CFrame = hrp.CFrame * CFrame.new(0,0,-6)
	body.Parent = m
	local seat = Instance.new("WeldConstraint")
	seat.Parent = body -- decorative
	m.Parent = workspace -- NOTE: this will exist in workspace (visual). It's client-run but still replicates in normal Roblox.
	LocalVehicleModel = m
	-- auto-despawn after time
	spawn(function()
		wait(600)
		if LocalVehicleModel and LocalVehicleModel.Parent then LocalVehicleModel:Destroy() LocalVehicleModel = nil end
	end)
end

local function destroyLocalVehicle()
	if LocalVehicleModel and LocalVehicleModel.Parent then
		LocalVehicleModel:Destroy()
		LocalVehicleModel = nil
	end
end

local function teleportToVIP(durationSeconds)
	-- Save pos and teleport local player to a VIP position (arbitrary coordinate)
	-- This is local teleport for player's character (works for most places)
	local char = player.Character
	if not char or not char:FindFirstChild("HumanoidRootPart") then return end
	ensureOriginals()
	local hrp = char.HumanoidRootPart
	SavedPosition = hrp.CFrame
	-- Choose a target CFrame. You can customize per-game. Here's a relative offset up high to avoid collisions:
	local vipCFrame = hrp.CFrame * CFrame.new(0,0,-10) * CFrame.new(0,0,-40) + Vector3.new(0,10,0)
	-- try to set
	pcall(function() hrp.CFrame = vipCFrame end)
	notify("Teleport", "VIP bölgesine ışınlandın (yerel). Süre: "..secondsToClock(durationSeconds))
	-- schedule return
	if durationSeconds and durationSeconds > 0 then
		local endT = os.time() + durationSeconds
		ActiveTimers["VOLDES_RETURN"] = endT
		spawn(function()
			while true do
				wait(1)
				if not ActiveTimers["VOLDES_RETURN"] then break end
				if os.time() >= ActiveTimers["VOLDES_RETURN"] then
					-- return
					if SavedPosition and char and char:FindFirstChild("HumanoidRootPart") then
						pcall(function() char.HumanoidRootPart.CFrame = SavedPosition end)
						notify("VIP Bitti", "Kendin önceki konumuna geri getirildin.")
					end
					ActiveTimers["VOLDES_RETURN"] = nil
					SavedPosition = nil
					break
				end
			end
		end)
	end
end

local function returnToSaved()
	local char = player.Character
	if SavedPosition and char and char:FindFirstChild("HumanoidRootPart") then
		pcall(function() char.HumanoidRootPart.CFrame = SavedPosition end)
		SavedPosition = nil
		ActiveTimers["VOLDES_RETURN"] = nil
		notify("Geri", "Kendin kaydedilen pozisyona geri getirildi.")
	end
end

-- clean up on character respawn
player.CharacterAdded:Connect(function(char)
	wait(0.3)
	-- reapply active effects
	if OwnedLocal["GP_PREMIUM_SPEED"] then applySpeed(2) else applySpeed(nil) end
	if OwnedLocal["GP_VIP_JUMP"] then applyJump(30) else applyJump(0) end
	-- local vehicle persists? we destroy to be safe
	destroyLocalVehicle()
end)

-- ====== UI Helpers to create pass entries ======
local function createPassRow(pass)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1,0,0,78)
	frame.BackgroundTransparency = 1
	frame.Parent = content

	local name = Instance.new("TextLabel", frame)
	name.Size = UDim2.new(0.6,0,0,22)
	name.Position = UDim2.new(0,0,0,4)
	name.BackgroundTransparency = 1
	name.Font = TITLE_FONT
	name.TextSize = 16
	name.TextColor3 = Color3.fromRGB(240,240,240)
	name.Text = pass.name
	name.TextXAlignment = Enum.TextXAlignment.Left

	local desc = Instance.new("TextLabel", frame)
	desc.Size = UDim2.new(1,0,0,36)
	desc.Position = UDim2.new(0,0,0,28)
	desc.BackgroundTransparency = 1
	desc.Font = Enum.Font.SourceSans
	desc.TextSize = 13
	desc.TextColor3 = Color3.fromRGB(200,200,200)
	desc.Text = pass.desc
	desc.TextWrapped = true
	desc.TextXAlignment = Enum.TextXAlignment.Left

	local btn = Instance.new("TextButton", frame)
	btn.Size = UDim2.new(0,140,0,30)
	btn.Position = UDim2.new(1,-140,0,8)
	btn.AnchorPoint = Vector2.new(1,0)
	btn.BackgroundColor3 = Color3.fromRGB(46,134,193)
	btn.Font = TITLE_FONT
	btn.TextSize = 14
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.Text = "Unlock (Mock)"
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)

	local status = Instance.new("TextLabel", frame)
	status.Size = UDim2.new(0.28,0,0,22)
	status.Position = UDim2.new(1,-148,0,4)
	status.AnchorPoint = Vector2.new(1,0)
	status.BackgroundTransparency = 1
	status.Font = Enum.Font.SourceSansSemibold
	status.TextSize = 13
	status.TextColor3 = Color3.fromRGB(200,255,200)
	status.Text = OwnedLocal[pass.id] and "Unlocked" or "Locked"
	status.TextXAlignment = Enum.TextXAlignment.Right

	-- duration selection for temporary rentals (if pass has durationDefault > 0)
	local durationPick = Instance.new("TextButton", frame)
	durationPick.Size = UDim2.new(0,86,0,24)
	durationPick.Position = UDim2.new(1,-140,0,40)
	durationPick.AnchorPoint = Vector2.new(1,0)
	durationPick.BackgroundColor3 = Color3.fromRGB(70,70,70)
	durationPick.Font = Enum.Font.SourceSans
	durationPick.TextSize = 13
	durationPick.TextColor3 = Color3.fromRGB(255,255,255)
	durationPick.Text = pass.durationDefault > 0 and ("Rent: "..secondsToClock(pass.durationDefault)) or "Permanent (local)"
	Instance.new("UICorner", durationPick).CornerRadius = UDim.new(0,6)

	-- if pass supports durations, allow clicking to toggle between default / 5m / 30m / custom
	local durations = {300, 1800, 3600} -- 5min, 30min, 60min
	local durIndex = 1
	durationPick.MouseButton1Click:Connect(function()
		if pass.durationDefault <= 0 then return end
		durIndex = durIndex + 1
		if durIndex > #durations then durIndex = 1 end
		local d = durations[durIndex]
		durationPick.Text = "Rent: "..secondsToClock(d)
		durationPick.Name = tostring(d) -- store chosen seconds in Name for easy access
	end)

	btn.MouseButton1Click:Connect(function()
		-- toggle ownership
		local was = OwnedLocal[pass.id]
		if not was then
			-- unlock locally
			OwnedLocal[pass.id] = true
			status.Text = "Unlocked"
			notify("Mock Unlock", pass.name.." yerelde açıldı.", 3)

			-- apply effects depending on id
			if pass.id == "GP_PREMIUM_SPEED" then
				applySpeed(2)
			elseif pass.id == "GP_VIP_JUMP" then
				applyJump(30)
			elseif pass.id == "GP_COLOR_PACK" then
				-- simple screen overlay effect to mimic colorizer
				if not screenGui:FindFirstChild("ColorOverlay") then
					local overlay = Instance.new("Frame")
					overlay.Name = "ColorOverlay"
					overlay.Size = UDim2.new(1,0,1,0)
					overlay.Position = UDim2.new(0,0,0,0)
					overlay.BackgroundTransparency = 0.85
					overlay.BackgroundColor3 = Color3.fromRGB(160,100,220)
					overlay.Parent = screenGui
					Instance.new("UICorner", overlay).CornerRadius = UDim.new(0,0)
					delay(0.6, function() if overlay and overlay.Parent then TweenService:Create(overlay, TweenInfo.new(0.6), {BackgroundTransparency = 0.9}):Play() end end)
				end
			elseif pass.id == "GP_CAR_PACK" then
				spawnLocalVehicle()
			elseif pass.id == "GP_VOLDES_TEMP" then
				-- teleport to VIP for a duration
				-- check chosen duration from durationPick.Name (if set), else default
				local chosen = tonumber(durationPick.Name) or pass.durationDefault or 1800
				teleportToVIP(chosen)
			end

			-- if rented pass -> set duration timer
			local chosenDur = tonumber(durationPick.Name) or pass.durationDefault or 0
			if chosenDur and chosenDur > 0 then
				ActiveTimers[pass.id] = os.time() + chosenDur
				-- auto unregister
				spawn(function()
					while ActiveTimers[pass.id] do
						wait(1)
						local remain = ActiveTimers[pass.id] - os.time()
						if remain <= 0 then
							-- expire
							ActiveTimers[pass.id] = nil
							OwnedLocal[pass.id] = false
							status.Text = "Locked"
							-- revert effects
							if pass.id == "GP_PREMIUM_SPEED" then applySpeed(nil) end
							if pass.id == "GP_VIP_JUMP" then applyJump(0) end
							if pass.id == "GP_COLOR_PACK" then
								local ov = screenGui:FindFirstChild("ColorOverlay")
								if ov then ov:Destroy() end
							end
							if pass.id == "GP_CAR_PACK" then destroyLocalVehicle() end
							notify("Süre Bitti", pass.name.." süresi doldu (yerel).")
							break
						end
					end
				end)
			end

		else
			-- lock / remove local ownership
			OwnedLocal[pass.id] = nil
			status.Text = "Locked"
			notify("Mock Lock", pass.name.." yerelde kapatıldı.", 2)
			-- revert effects
			if pass.id == "GP_PREMIUM_SPEED" then applySpeed(nil) end
			if pass.id == "GP_VIP_JUMP" then applyJump(0) end
			if pass.id == "GP_COLOR_PACK" then
				local ov = screenGui:FindFirstChild("ColorOverlay")
				if ov then ov:Destroy() end
			end
			if pass.id == "GP_CAR_PACK" then destroyLocalVehicle() end
		end
	end)

	return frame
end

-- Populate UI with passes
for _,p in ipairs(MockPasses) do
	createPassRow(p)
end

-- Extra utility buttons
local utilities = Instance.new("Frame")
utilities.Size = UDim2.new(1,0,0,64)
utilities.BackgroundTransparency = 1
utilities.Parent = content

local btnReturn = Instance.new("TextButton", utilities)
btnReturn.Size = UDim2.new(0,160,0,36)
btnReturn.Position = UDim2.new(0,0,0,8)
btnReturn.BackgroundColor3 = Color3.fromRGB(90,200,120)
btnReturn.Font = TITLE_FONT
btnReturn.TextSize = 14
btnReturn.Text = "Geri Dön (Saved Pos)"
Instance.new("UICorner", btnReturn).CornerRadius = UDim.new(0,8)
btnReturn.MouseButton1Click:Connect(returnToSaved)

local btnClearEffects = Instance.new("TextButton", utilities)
btnClearEffects.Size = UDim2.new(0,180,0,36)
btnClearEffects.Position = UDim2.new(0,170,0,8)
btnClearEffects.BackgroundColor3 = Color3.fromRGB(200,120,80)
btnClearEffects.Font = TITLE_FONT
btnClearEffects.TextSize = 14
btnClearEffects.Text = "Tüm Yerel Efektleri Kaldır"
Instance.new("UICorner", btnClearEffects).CornerRadius = UDim.new(0,8)
btnClearEffects.MouseButton1Click:Connect(function()
	-- clear state
	for k,_ in pairs(OwnedLocal) do OwnedLocal[k] = nil end
	for k,_ in pairs(ActiveTimers) do ActiveTimers[k] = nil end
	applySpeed(nil)
	applyJump(0)
	local ov = screenGui:FindFirstChild("ColorOverlay")
	if ov then ov:Destroy() end
	destroyLocalVehicle()
	notify("Temizlendi", "Tüm yerel efektler kaldırıldı.", 2)
end)

-- Toggle menu
local isOpen = false
local function openMenu()
	if isOpen then return end
	menu.Visible = true
	menu.Size = UDim2.new(0, MENU_W, 0, 0)
	TweenService:Create(menu, TweenInfo.new(TWEEN), {Size = UDim2.new(0, MENU_W, 0, MENU_H)}):Play()
	isOpen = true
end
local function closeMenu()
	if not isOpen then return end
	TweenService:Create(menu, TweenInfo.new(TWEEN), {Size = UDim2.new(0, MENU_W, 0, 0)}):Play()
	delay(TWEEN, function() menu.Visible = false end)
	isOpen = false
end

topBtn.MouseButton1Click:Connect(function()
	if isOpen then closeMenu() else openMenu() end
end)
closeBtn.MouseButton1Click:Connect(closeMenu)

-- simple drag for topBtn
local dragging, dragInput, dragStart, startPos = false, nil, nil, nil
topBtn.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = topBtn.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then dragging = false end
		end)
	end
end)
topBtn.InputChanged:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end end)
UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		topBtn.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- Auto update status label with timers
spawn(function()
	while true do
		wait(1)
		local activeCount = 0
		for k,v in pairs(ActiveTimers) do
			if v and v > os.time() then
				activeCount = activeCount + 1
			else
				ActiveTimers[k] = nil
				-- also if pass expired, remove OwnedLocal
				OwnedLocal[k] = nil
			end
		end
		if ActiveTimers["VOLDES_RETURN"] then
			local rem = ActiveTimers["VOLDES_RETURN"] - os.time()
			if rem < 0 then rem = 0 end
			statusLabel.Text = "VIP dönüş süresi: "..secondsToClock(rem)
		elseif activeCount > 0 then
			statusLabel.Text = "Aktif geçici izinler: "..tostring(activeCount)
		else
			statusLabel.Text = "Durum: Hazır (Yerel demo)."
		end
	end
end)

notify("Mock Gamepass Hub", "Yerel mock sistemi yüklendi. Gerçek gamepass satın alımı yapmaz.", 5)
