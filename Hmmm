-- Full Local Demo Admin & Mock Gamepass Hub (CLIENT ONLY)
-- Place this LocalScript in StarterPlayerScripts
-- DOES NOT perform real purchases or change server-side ownership.
-- It only applies local (client-side) visual/effect changes, teleport-back, timers, etc.

-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")

-- Player references
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- UI / appearance settings
local TITLE_FONT = Enum.Font.GothamBold
local MENU_W, MENU_H = 440, 520
local BTN_SIZE = UDim2.new(0,56,0,56)
local TWEEN = 0.18

-- Data stores (local only)
local MockPasses = {
	{ id = "GP_PREMIUM_SPEED",   name = "Premium Speed",        desc = "Yürüyüş hızını yükseltir (yerel)", durationDefault = 0 },
	{ id = "GP_VIP_JUMP",        name = "VIP Jump",             desc = "Zıplama gücünü yükseltir (yerel)", durationDefault = 0 },
	{ id = "GP_VOLDES_TEMP",     name = "Voldex 30min (demo)",  desc = "30dk süreyle VIP alanına ışınlar (yerel)", durationDefault = 1800 },
	{ id = "GP_COLOR_PACK",      name = "Colorizer Pack",       desc = "Ekrana renkli overlay uygular (yerel)", durationDefault = 0 },
	{ id = "GP_CAR_PACK",        name = "Vehicle Pack (local)", desc = "Client-side araç spawn eder (görsel)", durationDefault = 600 },
	{ id = "GP_ALL_UNLOCK",      name = "Unlock ALL (mock)",    desc = "Tüm mock pass'leri tek seferde açar (yerel)", durationDefault = 0 },
}

local OwnedLocal = {}      -- passId -> true/false
local ActiveTimers = {}    -- passId -> endTime (os.time)
local OriginalStats = {}   -- store WalkSpeed/JumpPower etc
local SavedPosition = nil  -- CFrame for teleport-back
local LocalVehicle = nil   -- model ref

-- Utility functions
local function notify(title, text, duration)
	pcall(function()
		StarterGui:SetCore("SendNotification", {Title = title or "Info", Text = text or "", Duration = duration or 4})
	end)
end

local function secondsToClock(sec)
	if not sec or sec <= 0 then return "00:00" end
	local m = math.floor(sec / 60)
	local s = sec % 60
	return string.format("%02d:%02d", m, s)
end

-- ensure stored original stats
local function ensureOriginals()
	local char = player.Character
	if not char then return end
	local hum = char:FindFirstChildWhichIsA("Humanoid")
	if not hum then return end
	if not OriginalStats.WalkSpeed then OriginalStats.WalkSpeed = hum.WalkSpeed end
	if not OriginalStats.JumpPower then OriginalStats.JumpPower = hum.JumpPower or 50 end
end

-- Apply / Revert effects
local function applySpeed(mult)
	local char = player.Character
	if not char then return end
	local hum = char:FindFirstChildWhichIsA("Humanoid")
	if not hum then return end
	ensureOriginals()
	if mult and mult > 0 then
		hum.WalkSpeed = (OriginalStats.WalkSpeed or 16) * mult
	else
		hum.WalkSpeed = OriginalStats.WalkSpeed or 16
	end
end

local function applyJump(add)
	local char = player.Character
	if not char then return end
	local hum = char:FindFirstChildWhichIsA("Humanoid")
	if not hum then return end
	ensureOriginals()
	if add and add ~= 0 then
		-- prefer JumpPower
		pcall(function() hum.JumpPower = (OriginalStats.JumpPower or 50) + add end)
	else
		pcall(function() hum.JumpPower = OriginalStats.JumpPower or 50 end)
	end
end

local function spawnLocalVehicle()
	if LocalVehicle and LocalVehicle.Parent then LocalVehicle:Destroy() LocalVehicle = nil end
	local char = player.Character
	if not char or not char:FindFirstChild("HumanoidRootPart") then return end
	local hrp = char.HumanoidRootPart
	local model = Instance.new("Model")
	model.Name = "LOCAL_VEHICLE_"..player.Name
	local body = Instance.new("Part")
	body.Size = Vector3.new(4,1.2,6)
	body.Anchored = true
	body.CanCollide = false
	body.Material = Enum.Material.SmoothPlastic
	body.Color = Color3.fromRGB(80,140,220)
	body.CFrame = hrp.CFrame * CFrame.new(0,0,-8)
	body.Parent = model
	local deco = Instance.new("Part")
	deco.Size = Vector3.new(2,0.6,2)
	deco.Anchored = true
	deco.CanCollide = false
	deco.Color = Color3.fromRGB(220,120,60)
	deco.CFrame = body.CFrame * CFrame.new(0,1,0)
	deco.Parent = model
	model.Parent = workspace
	LocalVehicle = model
	-- auto destroy after default time
	spawn(function()
		wait(600)
		if LocalVehicle and LocalVehicle.Parent then LocalVehicle:Destroy() LocalVehicle = nil end
	end)
end

local function destroyLocalVehicle()
	if LocalVehicle and LocalVehicle.Parent then LocalVehicle:Destroy() LocalVehicle = nil end
end

local function applyColorOverlay()
	if playerGui:FindFirstChild("MockColorOverlay") then return end
	local f = Instance.new("Frame")
	f.Name = "MockColorOverlay"
	f.Size = UDim2.new(1,0,1,0)
	f.Position = UDim2.new(0,0,0,0)
	f.BackgroundColor3 = Color3.fromRGB(160,110,220)
	f.BackgroundTransparency = 0.86
	f.ZIndex = 999
	f.Parent = playerGui
end

local function removeColorOverlay()
	local f = playerGui:FindFirstChild("MockColorOverlay")
	if f then f:Destroy() end
end

-- Teleport to VIP (local) and schedule return
local function teleportToVIP(durationSeconds)
	local char = player.Character
	if not char or not char:FindFirstChild("HumanoidRootPart") then return end
	ensureOriginals()
	local hrp = char.HumanoidRootPart
	SavedPosition = hrp.CFrame
	-- VIP CFrame: choose something relative up or away to avoid collisions
	local vipCFrame = hrp.CFrame * CFrame.new(0,5,-40)
	pcall(function() hrp.CFrame = vipCFrame end)
	notify("VIP", "VIP bölgesine yerel olarak ışınlandın. Süre: "..secondsToClock(durationSeconds))
	if durationSeconds and durationSeconds > 0 then
		ActiveTimers["VOLDES_RETURN"] = os.time() + durationSeconds
		spawn(function()
			while ActiveTimers["VOLDES_RETURN"] do
				wait(1)
				if os.time() >= ActiveTimers["VOLDES_RETURN"] then
					-- return
					local c = player.Character
					if SavedPosition and c and c:FindFirstChild("HumanoidRootPart") then
						pcall(function() c.HumanoidRootPart.CFrame = SavedPosition end)
						notify("VIP Bitti", "Önceki konumuna geri getirildin.")
					end
					ActiveTimers["VOLDES_RETURN"] = nil
					SavedPosition = nil
					break
				end
			end
		end)
	end
end

local function returnToSaved()
	local char = player.Character
	if SavedPosition and char and char:FindFirstChild("HumanoidRootPart") then
		pcall(function() char.HumanoidRootPart.CFrame = SavedPosition end)
		SavedPosition = nil
		ActiveTimers["VOLDES_RETURN"] = nil
		notify("Geri", "Kaydedilen pozisyona geri getirildin.")
	end
end

-- Bring/Goto/Highlight/Kill (local effects)
local function gotoTarget(target)
	if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then notify("Hata","Geçersiz hedef",2); return end
	local myChar = player.Character
	if not myChar or not myChar:FindFirstChild("HumanoidRootPart") then return end
	pcall(function() myChar.HumanoidRootPart.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.new(2,0,2) end)
	notify("Goto", "Hedefin yanına ışınlandın: "..target.Name,2)
end

local function bringTargetMarker(target)
	if not target or not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then notify("Hata","Geçersiz hedef",2); return end
	local hrp = target.Character.HumanoidRootPart
	local part = Instance.new("Part")
	part.Name = "DemoBringMarker_"..target.Name
	part.Size = Vector3.new(1,1,1)
	part.Anchored = true
	part.CanCollide = false
	part.Material = Enum.Material.Neon
	part.Color = Color3.fromRGB(100,200,255)
	part.Transparency = 0.5
	part.CFrame = hrp.CFrame * CFrame.new(0,2,0)
	part.Parent = workspace
	delay(4, function() if part and part.Parent then part:Destroy() end end)
	notify("Bring", "Hedef için işaret yerleştirildi: "..target.Name,2)
end

local function highlightTarget(target)
	if not target or not target.Character then notify("Hata","Geçersiz hedef",2); return end
	local head = target.Character:FindFirstChild("Head")
	if not head then return end
	local bg = Instance.new("BillboardGui")
	bg.Name = "DemoHighlight"
	bg.Size = UDim2.new(0,160,0,40)
	bg.StudsOffset = Vector3.new(0,2.5,0)
	bg.AlwaysOnTop = true
	bg.Parent = head
	local label = Instance.new("TextLabel", bg)
	label.Size = UDim2.fromScale(1,1)
	label.BackgroundTransparency = 0.35
	label.Text = "TARGET: "..target.Name
	label.Font = TITLE_FONT
	label.TextSize = 14
	label.TextColor3 = Color3.fromRGB(255,255,255)
	label.BackgroundColor3 = Color3.fromRGB(30,30,30)
	delay(4, function() if bg and bg.Parent then bg:Destroy() end end)
	notify("Highlight", target.Name.." vurgulandı.",2)
end

local function killSelf()
	local char = player.Character
	if not char then return end
	local hum = char:FindFirstChildWhichIsA("Humanoid")
	if hum then
		hum.Health = 0
		notify("Kill", "Kendini öldürdün (yerel).",2)
	end
end

-- Character respawn handling: reapply local active effects
player.CharacterAdded:Connect(function(char)
	wait(0.25)
	if OwnedLocal["GP_PREMIUM_SPEED"] then applySpeed(2) else applySpeed(nil) end
	if OwnedLocal["GP_VIP_JUMP"] then applyJump(30) else applyJump(0) end
	-- vehicle removed on respawn for safety
	destroyLocalVehicle()
end)

-- Build GUI
-- Remove old if present
for _,v in pairs(playerGui:GetChildren()) do
	if v.Name == "FullLocalMockHub_GUI" then v:Destroy() end
end

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "FullLocalMockHub_GUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Top floating button
local topBtn = Instance.new("Frame")
topBtn.Name = "TopBtn"
topBtn.Size = BTN_SIZE
topBtn.Position = UDim2.new(0,18,0,18)
topBtn.AnchorPoint = Vector2.new(0,0)
topBtn.BackgroundColor3 = Color3.fromRGB(28,28,28)
topBtn.BorderSizePixel = 0
topBtn.Parent = screenGui
Instance.new("UICorner", topBtn).CornerRadius = UDim.new(0,12)
topBtn.ZIndex = 300

local topLabel = Instance.new("TextLabel", topBtn)
topLabel.Size = UDim2.new(1,0,1,0)
topLabel.BackgroundTransparency = 1
topLabel.Font = TITLE_FONT
topLabel.Text = "GP"
topLabel.TextSize = 24
topLabel.TextColor3 = Color3.fromRGB(255,214,102)
topLabel.ZIndex = 301

-- main menu frame
local menu = Instance.new("Frame")
menu.Name = "MainMenu"
menu.Size = UDim2.new(0, MENU_W, 0, MENU_H)
menu.Position = UDim2.new(0,18,0,94)
menu.BackgroundColor3 = Color3.fromRGB(12,12,12)
menu.BorderSizePixel = 0
menu.Visible = false
menu.Parent = screenGui
Instance.new("UICorner", menu).CornerRadius = UDim.new(0,12)
menu.ZIndex = 299

-- header
local header = Instance.new("Frame", menu)
header.Size = UDim2.new(1,0,0,48)
header.BackgroundTransparency = 1
local title = Instance.new("TextLabel", header)
title.Size = UDim2.new(0.6,0,1,0)
title.Position = UDim2.new(0,12,0,0)
title.BackgroundTransparency = 1
title.Font = TITLE_FONT
title.TextSize = 20
title.Text = "Local MOCK Hub (Full)"
title.TextColor3 = Color3.fromRGB(230,230,230)
title.TextXAlignment = Enum.TextXAlignment.Left

local closeBtn = Instance.new("TextButton", header)
closeBtn.Size = UDim2.new(0,36,0,30)
closeBtn.Position = UDim2.new(1,-46,0,9)
closeBtn.BackgroundColor3 = Color3.fromRGB(200,60,60)
closeBtn.Text = "X"
closeBtn.Font = TITLE_FONT
closeBtn.TextSize = 16
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0,6)

local btnInc = Instance.new("TextButton", header)
btnInc.Size = UDim2.new(0,28,0,28)
btnInc.Position = UDim2.new(1,-94,0,9)
btnInc.BackgroundColor3 = Color3.fromRGB(70,70,70)
btnInc.Text = "+"
btnInc.Font = TITLE_FONT
btnInc.TextSize = 16
Instance.new("UICorner", btnInc).CornerRadius = UDim.new(0,6)

local btnDec = Instance.new("TextButton", header)
btnDec.Size = UDim2.new(0,28,0,28)
btnDec.Position = UDim2.new(1,-62,0,9)
btnDec.BackgroundColor3 = Color3.fromRGB(70,70,70)
btnDec.Text = "−"
btnDec.Font = TITLE_FONT
btnDec.TextSize = 16
Instance.new("UICorner", btnDec).CornerRadius = UDim.new(0,6)

-- content scrolling
local content = Instance.new("ScrollingFrame", menu)
content.Size = UDim2.new(1,-24,1,-92)
content.Position = UDim2.new(0,12,0,56)
content.BackgroundTransparency = 1
content.ScrollBarThickness = 8
local listLayout = Instance.new("UIListLayout", content)
listLayout.Padding = UDim.new(0,8)
listLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- selected target label
local selectedLabel = Instance.new("TextLabel", menu)
selectedLabel.Size = UDim2.new(1,-24,0,22)
selectedLabel.Position = UDim2.new(0,12,1,-42)
selectedLabel.BackgroundTransparency = 1
selectedLabel.Font = Enum.Font.SourceSans
selectedLabel.TextSize = 14
selectedLabel.Text = "Hedef: Yok"
selectedLabel.TextColor3 = Color3.fromRGB(200,200,200)

-- player selector frame inside content
local playersHeader = Instance.new("TextLabel", content)
playersHeader.Size = UDim2.new(1,0,0,18)
playersHeader.BackgroundTransparency = 1
playersHeader.Font = Enum.Font.SourceSansSemibold
playersHeader.TextSize = 14
playersHeader.Text = "Oyuncular (tıklayarak hedefle):"
playersHeader.TextColor3 = Color3.fromRGB(200,200,200)
playersHeader.TextXAlignment = Enum.TextXAlignment.Left

local playersFrame = Instance.new("Frame", content)
playersFrame.Size = UDim2.new(1,0,0,120)
playersFrame.BackgroundTransparency = 1
local plScroll = Instance.new("ScrollingFrame", playersFrame)
plScroll.Size = UDim2.new(1,0,1,0)
plScroll.CanvasSize = UDim2.new(0,0,0,0)
plScroll.ScrollBarThickness = 6
local plLayout = Instance.new("UIListLayout", plScroll)
plLayout.Padding = UDim.new(0,6)
plLayout.SortOrder = Enum.SortOrder.LayoutOrder

local selectedTarget = nil
local function refreshPlayers()
	for _,c in pairs(plScroll:GetChildren()) do
		if c:IsA("TextButton") then c:Destroy() end
	end
	for _,p in pairs(Players:GetPlayers()) do
		if p ~= player then
			local b = Instance.new("TextButton")
			b.Size = UDim2.new(1,0,0,26)
			b.BackgroundColor3 = Color3.fromRGB(60,60,60)
			b.BorderSizePixel = 0
			b.Font = Enum.Font.SourceSans
			b.TextSize = 14
			b.Text = p.Name
			b.TextColor3 = Color3.fromRGB(255,255,255)
			b.Parent = plScroll
			Instance.new("UICorner", b).CornerRadius = UDim.new(0,6)
			b.MouseButton1Click:Connect(function()
				selectedTarget = p
				selectedLabel.Text = "Hedef: "..p.Name
				notify("Hedef", p.Name.." seçildi.", 2)
			end)
		end
	end
	-- recalc
	local total = 0
	for _,obj in pairs(plScroll:GetChildren()) do
		if obj:IsA("TextButton") then total = total + obj.Size.Y.Offset + plLayout.Padding.Offset end
	end
	plScroll.CanvasSize = UDim2.new(0,0,0, math.max(total, 120))
end
Players.PlayerAdded:Connect(refreshPlayers)
Players.PlayerRemoving:Connect(refreshPlayers)
refreshPlayers()

-- Helper to create visible buttons
local function createButton(text, parent, cb)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1,0,0,40)
	btn.BackgroundColor3 = Color3.fromRGB(48,130,190)
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.Font = TITLE_FONT
	btn.TextSize = 15
	btn.Text = text
	btn.AutoButtonColor = true
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0,8)
	btn.Parent = parent
	btn.MouseButton1Click:Connect(function()
		pcall(cb)
	end)
	return btn
end

-- Build Mock Pass entries
local function createPassRow(pass)
	local frm = Instance.new("Frame")
	frm.Size = UDim2.new(1,0,0,82)
	frm.BackgroundTransparency = 1
	frm.Parent = content

	local name = Instance.new("TextLabel", frm)
	name.Size = UDim2.new(0.62,0,0,24)
	name.Position = UDim2.new(0,0,0,6)
	name.BackgroundTransparency = 1
	name.Font = TITLE_FONT
	name.TextSize = 15
	name.Text = pass.name
	name.TextColor3 = Color3.fromRGB(240,240,240)
	name.TextXAlignment = Enum.TextXAlignment.Left

	local status = Instance.new("TextLabel", frm)
	status.Size = UDim2.new(0.2,0,0,24)
	status.Position = UDim2.new(1,-168,0,6)
	status.AnchorPoint = Vector2.new(1,0)
	status.BackgroundTransparency = 1
	status.Font = Enum.Font.SourceSansSemibold
	status.TextSize = 13
	status.TextColor3 = Color3.fromRGB(200,255,200)
	status.Text = OwnedLocal[pass.id] and "Unlocked" or "Locked"
	status.TextXAlignment = Enum.TextXAlignment.Right

	local desc = Instance.new("TextLabel", frm)
	desc.Size = UDim2.new(1,0,0,36)
	desc.Position = UDim2.new(0,0,0,26)
	desc.BackgroundTransparency = 1
	desc.Font = Enum.Font.SourceSans
	desc.TextSize = 12
	desc.TextColor3 = Color3.fromRGB(200,200,200)
	desc.Text = pass.desc
	desc.TextWrapped = true
	desc.TextXAlignment = Enum.TextXAlignment.Left

	local btn = Instance.new("TextButton", frm)
	btn.Size = UDim2.new(0,140,0,32)
	btn.Position = UDim2.new(1,-12,0,6)
	btn.AnchorPoint = Vector2.new(1,0)
	btn.BackgroundColor3 = Color3.fromRGB(60,170,100)
	btn.Font = TITLE_FONT
	btn.TextSize = 13
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.Text = "Unlock (Mock)"
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)

	local durBtn = Instance.new("TextButton", frm)
	durBtn.Size = UDim2.new(0,86,0,26)
	durBtn.Position = UDim2.new(1,-162,0,44)
	durBtn.AnchorPoint = Vector2.new(1,0)
	durBtn.BackgroundColor3 = Color3.fromRGB(90,90,90)
	durBtn.Font = Enum.Font.SourceSans
	durBtn.TextSize = 12
	durBtn.TextColor3 = Color3.fromRGB(255,255,255)
	if pass.durationDefault and pass.durationDefault > 0 then
		durBtn.Text = "Rent: "..secondsToClock(pass.durationDefault)
	else
		durBtn.Text = "Permanent (local)"
	end
	Instance.new("UICorner", durBtn).CornerRadius = UDim.new(0,6)

	-- allow cycling durations for rentable passes
	local durations = {300, 1800, 3600} -- 5m,30m,60m
	local durIndex = 1
	if pass.durationDefault and pass.durationDefault > 0 then
		durBtn.MouseButton1Click:Connect(function()
			durIndex = durIndex + 1
			if durIndex > #durations then durIndex = 1 end
			durBtn.Text = "Rent: "..secondsToClock(durations[durIndex])
			durBtn.Name = tostring(durations[durIndex]) -- store chosen seconds
		end)
	end

	btn.MouseButton1Click:Connect(function()
		local was = OwnedLocal[pass.id]
		if not was then
			OwnedLocal[pass.id] = true
			status.Text = "Unlocked"
			notify("Mock Unlock", pass.name.." yerelde açıldı.", 3)
			-- apply effects by id
			if pass.id == "GP_PREMIUM_SPEED" then applySpeed(2) end
			if pass.id == "GP_VIP_JUMP" then applyJump(30) end
			if pass.id == "GP_COLOR_PACK" then applyColorOverlay() end
			if pass.id == "GP_CAR_PACK" then spawnLocalVehicle() end
			if pass.id == "GP_VOLDES_TEMP" then
				local chosen = tonumber(durBtn.Name) or pass.durationDefault or 1800
				teleportToVIP(chosen)
			end
			if pass.id == "GP_ALL_UNLOCK" then
				-- unlock all mock passes
				for _,p in pairs(MockPasses) do
					if p.id ~= "GP_ALL_UNLOCK" then
						OwnedLocal[p.id] = true
					end
				end
				-- apply all immediate effects
				applySpeed(2); applyJump(30); applyColorOverlay(); spawnLocalVehicle()
				notify("Mock Unlock", "Tüm mock pass'ler yerelde açıldı.", 3)
			end

			-- timer handling for rentable passes
			local chosenDur = tonumber(durBtn.Name) or pass.durationDefault or 0
			if chosenDur and chosenDur > 0 then
				ActiveTimers[pass.id] = os.time() + chosenDur
				spawn(function()
					while ActiveTimers[pass.id] do
						wait(1)
						if os.time() >= ActiveTimers[pass.id] then
							ActiveTimers[pass.id] = nil
							OwnedLocal[pass.id] = nil
							status.Text = "Locked"
							-- revert
							if pass.id == "GP_PREMIUM_SPEED" then applySpeed(nil) end
							if pass.id == "GP_VIP_JUMP" then applyJump(0) end
							if pass.id == "GP_COLOR_PACK" then removeColorOverlay() end
							if pass.id == "GP_CAR_PACK" then destroyLocalVehicle() end
							notify("Süre Bitti", pass.name.." süresi doldu (yerel).")
							break
						end
					end
				end)
			end
		else
			-- lock it
			OwnedLocal[pass.id] = nil
			status.Text = "Locked"
			notify("Mock Lock", pass.name.." yerelde kapatıldı.", 2)
			-- revert
			if pass.id == "GP_PREMIUM_SPEED" then applySpeed(nil) end
			if pass.id == "GP_VIP_JUMP" then applyJump(0) end
			if pass.id == "GP_COLOR_PACK" then removeColorOverlay() end
			if pass.id == "GP_CAR_PACK" then destroyLocalVehicle() end
		end
	end)

	return frm
end

-- Populate passes into UI
for _,p in ipairs(MockPasses) do
	local row = createPassRow(p)
end

-- Utility buttons block
local utilFrame = Instance.new("Frame")
utilFrame.Size = UDim2.new(1,0,0,72)
utilFrame.BackgroundTransparency = 1
utilFrame.Parent = content

local btnGoto = Instance.new("TextButton", utilFrame)
btnGoto.Size = UDim2.new(0,160,0,36)
btnGoto.Position = UDim2.new(0,0,0,12)
btnGoto.BackgroundColor3 = Color3.fromRGB(80,150,220)
btnGoto.Font = TITLE_FONT
btnGoto.TextSize = 14
btnGoto.Text = "Goto (YOU -> target)"
Instance.new("UICorner", btnGoto).CornerRadius = UDim.new(0,8)
btnGoto.MouseButton1Click:Connect(function()
	if not selectedTarget then notify("Hata","Önce hedef seç.",2); return end
	gotoTarget(selectedTarget)
end)

local btnBring = Instance.new("TextButton", utilFrame)
btnBring.Size = UDim2.new(0,160,0,36)
btnBring.Position = UDim2.new(0,170,0,12)
btnBring.BackgroundColor3 = Color3.fromRGB(90,200,120)
btnBring.Font = TITLE_FONT
btnBring.TextSize = 14
btnBring.Text = "Bring (marker)"
Instance.new("UICorner", btnBring).CornerRadius = UDim.new(0,8)
btnBring.MouseButton1Click:Connect(function()
	if not selectedTarget then notify("Hata","Önce hedef seç.",2); return end
	bringTargetMarker(selectedTarget)
end)

local btnHighlight = Instance.new("TextButton", utilFrame)
btnHighlight.Size = UDim2.new(0,160,0,36)
btnHighlight.Position = UDim2.new(0,340,0,12)
btnHighlight.BackgroundColor3 = Color3.fromRGB(200,140,80)
btnHighlight.Font = TITLE_FONT
btnHighlight.TextSize = 14
btnHighlight.Text = "Highlight Target"
Instance.new("UICorner", btnHighlight).CornerRadius = UDim.new(0,8)
btnHighlight.MouseButton1Click:Connect(function()
	if not selectedTarget then notify("Hata","Önce hedef seç.",2); return end
	highlightTarget(selectedTarget)
end)

local btnKill = Instance.new("TextButton", utilFrame)
btnKill.Size = UDim2.new(0,120,0,32)
btnKill.Position = UDim2.new(0,0,0,44)
btnKill.BackgroundColor3 = Color3.fromRGB(200,60,60)
btnKill.Font = TITLE_FONT
btnKill.TextSize = 13
btnKill.Text = "Kill (self)"
Instance.new("UICorner", btnKill).CornerRadius = UDim.new(0,8)
btnKill.MouseButton1Click:Connect(function() killSelf() end)

local btnReturn = Instance.new("TextButton", utilFrame)
btnReturn.Size = UDim2.new(0,160,0,32)
btnReturn.Position = UDim2.new(0,130,0,44)
btnReturn.BackgroundColor3 = Color3.fromRGB(120,200,160)
btnReturn.Font = TITLE_FONT
btnReturn.TextSize = 13
btnReturn.Text = "Return to Saved Pos"
Instance.new("UICorner", btnReturn).CornerRadius = UDim.new(0,8)
btnReturn.MouseButton1Click:Connect(returnToSaved)

local btnClear = Instance.new("TextButton", utilFrame)
btnClear.Size = UDim2.new(0,180,0,32)
btnClear.Position = UDim2.new(0,300,0,44)
btnClear.BackgroundColor3 = Color3.fromRGB(200,120,80)
btnClear.Font = TITLE_FONT
btnClear.TextSize = 13
btnClear.Text = "Clear Local Effects"
Instance.new("UICorner", btnClear).CornerRadius = UDim.new(0,8)
btnClear.MouseButton1Click:Connect(function()
	for k,_ in pairs(OwnedLocal) do OwnedLocal[k] = nil end
	for k,_ in pairs(ActiveTimers) do ActiveTimers[k] = nil end
	applySpeed(nil); applyJump(0); removeColorOverlay(); destroyLocalVehicle()
	notify("Cleared", "Tüm yerel efektler kaldırıldı.", 3)
end)

-- open/close behavior
local isOpen = false
local function openMenu()
	if isOpen then return end
	menu.Visible = true
	menu.Size = UDim2.new(0, MENU_W, 0, 0)
	TweenService:Create(menu, TweenInfo.new(TWEEN), {Size = UDim2.new(0, MENU_W, 0, MENU_H)}):Play()
	isOpen = true
end
local function closeMenu()
	if not isOpen then return end
	TweenService:Create(menu, TweenInfo.new(TWEEN), {Size = UDim2.new(0, MENU_W, 0, 0)}):Play()
	delay(TWEEN, function() menu.Visible = false end)
	isOpen = false
end

topBtn.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		if isOpen then closeMenu() else openMenu() end
	end
end)
closeBtn.MouseButton1Click:Connect(closeMenu)

-- resize handlers
btnInc.MouseButton1Click:Connect(function()
	MENU_W = math.min(MENU_W + 80, 1000)
	MENU_H = math.min(MENU_H + 80, 1000)
	menu.Size = UDim2.new(0, MENU_W, 0, MENU_H)
end)
btnDec.MouseButton1Click:Connect(function()
	MENU_W = math.max(MENU_W - 80, 240)
	MENU_H = math.max(MENU_H - 80, 200)
	menu.Size = UDim2.new(0, MENU_W, 0, MENU_H)
end)

-- topBtn draggable
local dragging, dragInput, dragStart, startPos = false, nil, nil, nil
topBtn.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = topBtn.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then dragging = false end
		end)
	end
end)
topBtn.InputChanged:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseMovement then dragInput = input end end)
UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		topBtn.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- UIListLayout auto size handling
listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	content.CanvasSize = UDim2.new(0,0,0, listLayout.AbsoluteContentSize.Y + 12)
end)

-- Timer status updater
spawn(function()
	while true do
		wait(1)
		-- expire timers
		for pid, endt in pairs(ActiveTimers) do
			if endt and os.time() >= endt then
				ActiveTimers[pid] = nil
				OwnedLocal[pid] = nil
				-- revert known effects
				if pid == "GP_PREMIUM_SPEED" then applySpeed(nil) end
				if pid == "GP_VIP_JUMP" then applyJump(0) end
				if pid == "GP_COLOR_PACK" then removeColorOverlay() end
				if pid == "GP_CAR_PACK" then destroyLocalVehicle() end
				if pid == "GP_VOLDES_TEMP" then
					-- vip return handled in its own coroutine
				end
				notify("Expired", pid.." süresi sona erdi (yerel).")
			end
		end
		-- update footer label
		local activeCount = 0
		if ActiveTimers["VOLDES_RETURN"] then
			local rem = ActiveTimers["VOLDES_RETURN"] - os.time()
			if rem < 0 then rem = 0 end
			selectedLabel.Text = "VIP dönüş süresi: "..secondsToClock(rem)
		else
			for k,v in pairs(ActiveTimers) do if v and v > os.time() then activeCount = activeCount + 1 end end
			if activeCount > 0 then
				selectedLabel.Text = "Aktif yerel izinler: "..tostring(activeCount)
			else
				-- keep target label if exists
				if selectedTarget then selectedLabel.Text = "Hedef: "..selectedTarget.Name else selectedLabel.Text = "Hedef: Yok" end
			end
		end
	end
end)

notify("Local MOCK Hub", "Tam yerel mock hub yüklendi. Gerçek satın alma yapmaz.", 5)
